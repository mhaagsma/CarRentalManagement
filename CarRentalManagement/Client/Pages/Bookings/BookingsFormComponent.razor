@inject HttpClient _client

<EditForm Model="@booking" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <fieldset disabled="@Disabled">
        <div class="form-group">
            <label>Customer: </label>
            <div>
                <select @bind="booking.CustomerID" class="form-control">
                    <option value="">-- Select Customer --</option>
                    @if (Customers != null)
                    {
                        foreach (var customer in Customers)
                        {
                            <option value="@customer.Id">@customer.firstname - @customer.lastname - @customer.TaxId </option>
                        }
                    }
                </select>

            </div>
        </div>

        <div class="form-group">
            <label>Vehicle: </label>
            <div>
                <select @bind="booking.VehicleId" class="form-control">
                    <option value="">-- Select Vehicle --</option>
                    @if (Vehicles != null)
                    {
                        foreach (var vehicle in Vehicles)
                        {
                            <option value="@vehicle.Id">@vehicle.Make.Name - @vehicle.Model.Name - @vehicle.Year - @vehicle.Colour.Name | - @vehicle.LicensePlateNumber</option>
                        }
                    }
                </select>

            </div>
        </div>



        <div class="form-group">
            <label>Date out: </label>
            <InputDate @bind-Value="@booking.DateOut" class="form-control" />
            <ValidationMessage For="@(() => booking.DateOut)" />
        </div>

        @if (booking.Id > 0)
        {
            <div class="form-group">
                <label>Date In: </label>
                <InputDate @bind-Value="@booking.DateIn" class="form-control" />
                <ValidationMessage For="@(() => booking.DateIn)" />
            </div>
        }

        </fieldset>

        @if (!Disabled)
        {
            <button type="submit" class="btn btn-success btn-block">
                @ButtonText
            </button>
        }
        <BackToList Target="bookings" />
</EditForm>

@code
{


    private IList<Vehicle> Vehicles;
    private IList<Customer> Customers;
    protected override async Task OnInitializedAsync()
    {
        Vehicles = await _client.GetFromJsonAsync<List<Vehicle>>($"{Endpoints.VehiclesEndpoint}");
        Customers = await _client.GetFromJsonAsync<List<Customer>>($"{Endpoints.CustomersEndpoint}");

    }
    [Parameter]
    public bool Disabled { get; set; } = false; 
    [Parameter] public Booking booking { get; set; }

    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

}
